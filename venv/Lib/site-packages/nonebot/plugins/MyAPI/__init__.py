# coding:utf-8
import os.path
import time
import asyncio

import nonebot
import requests

from pathlib import Path
from nonebot.matcher import Matcher
from nonebot.params import Arg,CommandArg,ArgPlainText,Event
from nonebot import on_keyword, on_command, on_fullmatch, require, on_notice
from nonebot.rule import to_me
from nonebot.adapters.onebot.v11 import MessageSegment,Message,Bot,PRIVATE

from .utils import Utils
from ..mazui_study.utils import utils

update_name = on_notice()

setu = on_command("awsl",aliases={'发张图','奖励一下'},priority=5,block=True)
private_command = on_command("私聊命令",priority=4)
group_command = on_command("群聊命令",priority=4)

hina = on_keyword({"日菜",'hina','Hina'},priority=10)

menu = on_fullmatch("菜单",priority=4)
hao = on_fullmatch("好",priority=3)
wuyu = on_fullmatch("无语了",priority=4)
wokao = on_fullmatch("我靠",priority=4)
queshi = on_fullmatch("确实",priority=4)
xswl = on_fullmatch("笑死我了",priority=4)

DATABASE_PATH = Path() / 'data' / 'learning_chat' / 'learning_chat.db'

@update_name.handle()
async def _(event: Event):
    if notice_group_card := event.get_event_description():
        notice_dict = eval(notice_group_card)
        if notice_dict['notice_type'] == 'group_card':
            card_old, card_new, user_id = notice_dict['card_old'], notice_dict['card_new'], notice_dict['user_id']
            await update_name.finish(Message(f"[CQ:at,qq={user_id}]的状态由{card_old}转变为{card_new}了哦~"))


@setu.handle()
async def _(matcher : Matcher,args : Message = CommandArg()):

    num = args.extract_plain_text()
    if num:
        matcher.set_arg("num",args)


@setu.got("num",prompt="想要日菜发多少张图呢~")
async def _(bot:Bot, num : Message = Arg(),num_name: str = ArgPlainText("num")):
    # color图片缓存路径
    t1 = os.path.abspath("./data/color_imgae/")
    color_cq : str = 'file:///'+ t1

    if int(num_name) <= 10:

        if await Utils.read_date():

            id_params = await setu.send(Message("小日菜正在处理哦~"))
            message_id = id_params['message_id']

            # 缓存color图片
            await Utils.load_pic(int(num_name))
            # 写入CD
            await Utils.write_date()
            # 发送
            if message_id:
                await bot.delete_msg(message_id=message_id)
            for i in range(int(num_name)):
                try:
                    await setu.send(MessageSegment.image(file=color_cq + f'hh{i}.png'))
                except Exception:
                    await setu.finish(Message("图片可能过界了哦~"))

            await setu.finish(Message(f"一共{num_name}张图哦~"))

        else:
            # CD未冷却
            await setu.finish(Message("小日菜还没准备好哦~"))

    else:

        await setu.finish("图片太多了日菜处理不过来哦~")






@menu.handle()
async def _() -> None:
    menu_str : str= "有什么想问小日菜的吗~\n私聊命令|群聊命令"
    await menu.finish(Message(menu_str))


@group_command.handle()
async def _() -> None:

    command_str : str = "早安/:早上好哦~\n晚安:晚安喽~\n抽签:签到--噜♪的一天的开始喽~(今日运势帮助可查看规则~)\n" \
                        "awsl(+次数):奖励~\nremake:人生重来小游戏~\nchat:和New Bing对话吧~\n"\
                        "召唤/戳:日菜会代替召唤你要找的人哦~(设置召唤+@+名字可以进行设置哦)\n撤回:撤回日菜的消息~\n" \
                        "inform+name:停止/开启提醒~\n每日一题:查看每日一题目录~\ncheck:查看每日一题的题目~\ncos:随机抽取米游社的一张" \
                        "图~"

    await group_command.finish(Message(command_str))


'''
↓需要修改添加↓
'''

@hina.handle()
async def _() -> None:
    
    await hina.finish(Message("叫日菜什么事啊~"))



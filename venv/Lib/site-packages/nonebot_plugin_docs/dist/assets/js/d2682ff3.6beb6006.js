"use strict";(self.webpackChunknonebot=self.webpackChunknonebot||[]).push([[2376],{35318:function(e,t,n){n.r(t),n.d(t,{MDXContext:function(){return d},MDXProvider:function(){return m},mdx:function(){return b},useMDXComponents:function(){return c},withMDXComponents:function(){return l}});var r=n(27378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o.apply(this,arguments)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),l=function(e){return function(t){var n=c(t.components);return r.createElement(e,o({},t,{components:n}))}},c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),l=c(n),m=a,y=l["".concat(i,".").concat(m)]||l[m]||u[m]||o;return n?r.createElement(y,s(s({ref:t},d),{},{components:n})):r.createElement(y,s({ref:t},d))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=y;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},24900:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return l},default:function(){return m}});var r=n(25773),a=n(30808),o=(n(27378),n(35318)),i=["components"],s={sidebar_position:4,description:"\u6d4b\u8bd5\u9002\u914d\u5668"},p="\u6d4b\u8bd5\u9002\u914d\u5668",d={unversionedId:"advanced/unittest/test-adapters",id:"advanced/unittest/test-adapters",isDocsHomePage:!1,title:"\u6d4b\u8bd5\u9002\u914d\u5668",description:"\u6d4b\u8bd5\u9002\u914d\u5668",source:"@site/docs/advanced/unittest/test-adapters.md",sourceDirName:"advanced/unittest",slug:"/advanced/unittest/test-adapters",permalink:"/website/docs/next/advanced/unittest/test-adapters",editUrl:"https://github.com/nonebot/nonebot2/edit/master/website/docs/advanced/unittest/test-adapters.md",tags:[],version:"current",lastUpdatedBy:"github-actions[bot]",lastUpdatedAt:1674375446,formattedLastUpdatedAt:"2023/1/22",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"\u6d4b\u8bd5\u9002\u914d\u5668"},sidebar:"tutorial",previous:{title:"\u6d4b\u8bd5\u4e8b\u4ef6\u54cd\u5e94\u5904\u7406\u884c\u4e3a",permalink:"/website/docs/next/advanced/unittest/test-matcher-operation"},next:{title:"\u53d1\u5e03\u63d2\u4ef6",permalink:"/website/docs/next/advanced/publish-plugin"}},l=[{value:"\u6ce8\u518c\u9002\u914d\u5668",id:"\u6ce8\u518c\u9002\u914d\u5668",children:[],level:2},{value:"\u6d4b\u8bd5\u8fde\u63a5",id:"\u6d4b\u8bd5\u8fde\u63a5",children:[],level:2},{value:"\u6d4b\u8bd5\u4e8b\u4ef6\u8f6c\u5316",id:"\u6d4b\u8bd5\u4e8b\u4ef6\u8f6c\u5316",children:[],level:2},{value:"\u6d4b\u8bd5 API \u8c03\u7528",id:"\u6d4b\u8bd5-api-\u8c03\u7528",children:[],level:2}],c={toc:l};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.mdx)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"\u6d4b\u8bd5\u9002\u914d\u5668"},"\u6d4b\u8bd5\u9002\u914d\u5668"),(0,o.mdx)("p",null,"\u901a\u5e38\u6765\u8bf4\uff0c\u6d4b\u8bd5\u9002\u914d\u5668\u9700\u8981\u6d4b\u8bd5\u8fd9\u4e09\u9879\u3002"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},"\u6d4b\u8bd5\u8fde\u63a5"),(0,o.mdx)("li",{parentName:"ol"},"\u6d4b\u8bd5\u4e8b\u4ef6\u8f6c\u5316"),(0,o.mdx)("li",{parentName:"ol"},"\u6d4b\u8bd5 API \u8c03\u7528")),(0,o.mdx)("h2",{id:"\u6ce8\u518c\u9002\u914d\u5668"},"\u6ce8\u518c\u9002\u914d\u5668"),(0,o.mdx)("p",null,"\u4efb\u4f55\u7684\u9002\u914d\u5668\u90fd\u9700\u8981\u6ce8\u518c\u624d\u80fd\u8d77\u4f5c\u7528\u3002"),(0,o.mdx)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Pytest \u7684 Fixtures\uff0c\u5728\u6d4b\u8bd5\u5f00\u59cb\u524d\u521d\u59cb\u5316 NoneBot \u5e76",(0,o.mdx)("strong",{parentName:"p"},"\u6ce8\u518c\u9002\u914d\u5668"),"\u3002"),(0,o.mdx)("p",null,"\u6211\u4eec\u5047\u8bbe\u9002\u914d\u5668\u4e3a ",(0,o.mdx)("inlineCode",{parentName:"p"},"nonebot.adapters.test"),"\u3002"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-python",metastring:"{20,21} title=conftest.py","{20,21}":!0,title:"conftest.py"},'from pathlib import Path\n\nimport pytest\nfrom nonebug import App\n\n# \u5982\u679c\u9002\u914d\u5668\u91c7\u7528 nonebot.adapters monospace \u5219\u9700\u8981\u4f7f\u7528\u6b64hook\u65b9\u6cd5\u6b63\u786e\u6dfb\u52a0\u8def\u5f84\n@pytest.fixture\ndef import_hook():\n    import nonebot.adapters\n\n    nonebot.adapters.__path__.append(  # type: ignore\n        str((Path(__file__).parent.parent / "nonebot" / "adapters").resolve())\n    )\n\n@pytest.fixture\nasync def init_adapter(app: App, import_hook):\n    import nonebot\n    from nonebot.adapters.test import Adapter\n\n    driver = nonebot.get_driver()\n    driver.register_adapter(Adapter)\n')),(0,o.mdx)("h2",{id:"\u6d4b\u8bd5\u8fde\u63a5"},"\u6d4b\u8bd5\u8fde\u63a5"),(0,o.mdx)("p",null,"\u4efb\u4f55\u7684\u9002\u914d\u5668\u7684\u8fde\u63a5\u65b9\u5f0f\u4e3b\u8981\u6709\u4ee5\u4e0b 4 \u79cd\uff1a"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},"\u53cd\u5411 HTTP\uff08WebHook\uff09"),(0,o.mdx)("li",{parentName:"ol"},"\u53cd\u5411 WebSocket"),(0,o.mdx)("li",{parentName:"ol"},"\u6b63\u5411 HTTP"),(0,o.mdx)("li",{parentName:"ol"},"\u6b63\u5411 WebSocket")),(0,o.mdx)("p",null,"NoneBug \u7684 ",(0,o.mdx)("inlineCode",{parentName:"p"},"test_server")," \u65b9\u6cd5\u53ef\u4ee5\u4f9b\u6211\u4eec\u6d4b\u8bd5\u53cd\u5411\u8fde\u63a5\u65b9\u5f0f\u3002"),(0,o.mdx)("p",null,(0,o.mdx)("inlineCode",{parentName:"p"},"test_server")," \u7684 ",(0,o.mdx)("inlineCode",{parentName:"p"},"get_client")," \u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6 HTTP/WebSocket \u5ba2\u6237\u7aef\u3002"),(0,o.mdx)("p",null,"\u6211\u4eec\u5047\u8bbe\u9002\u914d\u5668 HTTP \u4e0a\u62a5\u5730\u5740\u4e3a ",(0,o.mdx)("inlineCode",{parentName:"p"},"/test/http"),"\uff0c\u53cd\u5411 WebSocket \u5730\u5740\u4e3a ",(0,o.mdx)("inlineCode",{parentName:"p"},"/test/ws"),"\uff0c\u4e0a\u62a5\u673a\u5668\u4eba ID\n\u4f7f\u7528\u8bf7\u6c42\u5934 ",(0,o.mdx)("inlineCode",{parentName:"p"},"Bot-ID")," \u6765\u6f14\u793a\u5982\u4f55\u901a\u8fc7 NoneBug \u6d4b\u8bd5\u9002\u914d\u5668\u3002"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-python",metastring:"{8,16,17,19-22,26,34,36-39} title=test_connection.py","{8,16,17,19-22,26,34,36-39}":!0,title:"test_connection.py"},'from pathlib import Path\n\nimport pytest\nfrom nonebug import App\n\n@pytest.mark.asyncio\n@pytest.mark.parametrize(\n    "endpoints", ["/test/http"]\n)\nasync def test_http(app: App, init_adapter, endpoints: str):\n    import nonebot\n\n    async with app.test_server() as ctx:\n        client = ctx.get_client()\n\n        body = {"post_type": "test"}\n        headers = {"Bot-ID": "test"}\n\n        resp = await client.post(endpoints, json=body, headers=headers)\n        assert resp.status_code == 204  # \u68c0\u6d4b\u72b6\u6001\u7801\u662f\u5426\u6b63\u786e\n        bots = nonebot.get_bots()\n        assert "test" in bots  # \u68c0\u6d4b\u662f\u5426\u8fde\u63a5\u6210\u529f\n\n@pytest.mark.asyncio\n@pytest.mark.parametrize(\n    "endpoints", ["/test/ws"]\n)\nasync def test_ws(app: App, init_adapter, endpoints: str):\n    import nonebot\n\n    async with app.test_server() as ctx:\n        client = ctx.get_client()\n\n        headers = {"Bot-ID": "test"}\n\n        async with client.websocket_connect(endpoints, headers=headers) as ws:\n            bots = nonebot.get_bots()\n            assert "test" in bots  # \u68c0\u6d4b\u662f\u5426\u8fde\u63a5\u6210\u529f\n')),(0,o.mdx)("h2",{id:"\u6d4b\u8bd5\u4e8b\u4ef6\u8f6c\u5316"},"\u6d4b\u8bd5\u4e8b\u4ef6\u8f6c\u5316"),(0,o.mdx)("p",null,"\u4e8b\u4ef6\u8f6c\u5316\u5c31\u662f\u5c06\u539f\u59cb\u6570\u636e\u53cd\u5e8f\u5217\u5316\u4e3a ",(0,o.mdx)("inlineCode",{parentName:"p"},"Event")," \u5bf9\u8c61\u7684\u8fc7\u7a0b\u3002"),(0,o.mdx)("p",null,"\u6d4b\u8bd5\u4e8b\u4ef6\u8f6c\u5316\u5c31\u662f\u6d4b\u8bd5\u53cd\u5e8f\u5217\u5316\u662f\u5426\u6309\u7167\u9884\u671f\u8f6c\u5316\u4e3a\u5bf9\u5e94 ",(0,o.mdx)("inlineCode",{parentName:"p"},"Event")," \u7c7b\u578b\u3002"),(0,o.mdx)("p",null,"\u4e0b\u9762\u5c06\u4ee5 ",(0,o.mdx)("inlineCode",{parentName:"p"},"dict_to_event")," \u4f5c\u4e3a\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5\uff0c",(0,o.mdx)("inlineCode",{parentName:"p"},"type")," \u4e3a ",(0,o.mdx)("inlineCode",{parentName:"p"},"test")," \u7684\u4e8b\u4ef6\u7c7b\u578b\u4e3a ",(0,o.mdx)("inlineCode",{parentName:"p"},"TestEvent")," \u6765\u6f14\u793a\u5982\u4f55\u6d4b\u8bd5\u4e8b\u4ef6\u8f6c\u5316\u3002"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-python",metastring:"{8,9} title=test_event.py","{8,9}":!0,title:"test_event.py"},'import pytest\nfrom nonebug import App\n\n@pytest.mark.asyncio\nasync def test_event(app: App, init_adapter):\n    from nonebot.adapters.test import Adapter, TestEvent\n\n    event = Adapter.dict_to_event({"post_type": "test"})  # \u53cd\u5e8f\u5217\u5316\u539f\u59cb\u6570\u636e\n    assert isinstance(event, TestEvent)  # \u65ad\u8a00\u7c7b\u578b\u662f\u5426\u4e0e\u9884\u671f\u4e00\u81f4\n')),(0,o.mdx)("h2",{id:"\u6d4b\u8bd5-api-\u8c03\u7528"},"\u6d4b\u8bd5 API \u8c03\u7528"),(0,o.mdx)("p",null,"\u5c06\u6d88\u606f\u5e8f\u5217\u5316\u4e3a\u539f\u59cb\u6570\u636e\u5e76\u7531\u9002\u914d\u5668\u53d1\u9001\u5230\u534f\u8bae\u7aef\u53eb\u505a API \u8c03\u7528\u3002"),(0,o.mdx)("p",null,"\u6d4b\u8bd5 API \u8c03\u7528\u5c31\u662f\u8c03\u7528 API \u5e76\u9a8c\u8bc1\u8fd4\u56de\u4e0e\u9884\u671f\u8fd4\u56de\u662f\u5426\u4e00\u81f4\u3002"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-python",metastring:"{16-18,23-32} title=test_call_api.py","{16-18,23-32}":!0,title:"test_call_api.py"},'import asyncio\nfrom pathlib import Path\n\nimport pytest\nfrom nonebug import App\n\n@pytest.mark.asyncio\nasync def test_ws(app: App, init_adapter):\n    import nonebot\n\n    async with app.test_server() as ctx:\n        client = ctx.get_client()\n\n        headers = {"Bot-ID": "test"}\n\n        async def call_api():\n            bot = nonebot.get_bot("test")\n            return await bot.test_api()\n\n        async with client.websocket_connect("/test/ws", headers=headers) as ws:\n            task = asyncio.create_task(call_api())\n\n            # received = await ws.receive_text()\n            # received = await ws.receive_bytes()\n            received = await ws.receive_json()\n            assert received == {"action": "test_api"}  # \u68c0\u6d4b\u8c03\u7528\u662f\u5426\u4e0e\u9884\u671f\u4e00\u81f4\n            response = {"result": "test"}\n            # await ws.send_text(...)\n            # await ws.send_bytes(...)\n            await ws.send_json(response, mode="bytes")\n            result = await task\n            assert result == response  # \u68c0\u6d4b\u8fd4\u56de\u662f\u5426\u4e0e\u9884\u671f\u4e00\u81f4\n')))}m.isMDXComponent=!0}}]);